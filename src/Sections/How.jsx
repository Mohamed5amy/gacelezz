import { Stack, Typography } from '@mui/material';
import { useEffect, useRef } from 'react';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';

// Register the ScrollTrigger plugin
gsap.registerPlugin(ScrollTrigger);

const How = () => {

  const svgRef1 = useRef(null);
  const svgRef2 = useRef(null);
  const svgRef3 = useRef(null);
  const svgRef4 = useRef(null);
  const box1 = useRef(null)


  useEffect(() => {
    // 1
    const paths = svgRef1.current.querySelectorAll('path');
    paths.forEach((path) => {
      const length = path.getTotalLength();

      // Set the initial stroke-dasharray and stroke-dashoffset values
      path.style.strokeDasharray = length;
      path.style.strokeDashoffset = length;

      // Create the animation
      gsap.fromTo(
        path,
        { strokeDashoffset: length },
        {
          strokeDashoffset: 0,
          scrollTrigger: {
            trigger: path,
            start: "top 80%",
            end: "bottom 0%",
            scrub: 1,
          },
          duration: 20,
        }
      );
    });
    // 2
    const paths2 = svgRef2.current.querySelectorAll('path');
    paths2.forEach((path) => {
      const length = path.getTotalLength();

      // Set the initial stroke-dasharray and stroke-dashoffset values
      path.style.strokeDasharray = length;
      path.style.strokeDashoffset = length;

      // Create the animation
      gsap.fromTo(
        path,
        { strokeDashoffset: length },
        {
          strokeDashoffset: 0,
          scrollTrigger: {
            trigger: path,
            start: "top 80%",
            end: "bottom 20%",
            scrub: 1,
          },
          duration: 2,
        }
      );
    });
    // 3
    const paths3 = svgRef3.current.querySelectorAll('path');
    paths3.forEach((path) => {
      const length = path.getTotalLength();

      // Set the initial stroke-dasharray and stroke-dashoffset values
      path.style.strokeDasharray = length;
      path.style.strokeDashoffset = length;

      // Create the animation
      gsap.fromTo(
        path,
        { strokeDashoffset: length },
        {
          strokeDashoffset: 0,
          scrollTrigger: {
            trigger: path,
            start: "top 80%",
            end: "bottom 20%",
            scrub: 1,
          },
          duration: 2,
        }
      );
    });
    // 4
    const paths4 = svgRef4.current.querySelectorAll('path');
    paths4.forEach((path) => {
      const length = path.getTotalLength();

      // Set the initial stroke-dasharray and stroke-dashoffset values
      path.style.strokeDasharray = length;
      path.style.strokeDashoffset = length;

      // Create the animation
      gsap.fromTo(
        path,
        { strokeDashoffset: length },
        {
          strokeDashoffset: 0,
          scrollTrigger: {
            trigger: path,
            start: "top 80%",
            end: "bottom 20%",
            scrub: 1,
          },
          duration: 2,
        }
      );
    });

    gsap.from(box1.current, {
      duration: 1,
      y : 50,
      opacity : 0,
      scrollTrigger: {
        trigger: box1.current,
        start: "top 80%", // when the top of the element hits 80% of the viewport height
        end: "top 50%", // when the top of the element hits 80% of the viewport height
        scrub: true, // Makes the animation smooth
        markers: false // Enable markers for debugging
      }
    });
  }, []);
  
  return (
    <Stack px={{xs : 10 , sm : 20 , md : 20 , lg : 50}} py={{xs : 30 , sm : 40}} bgcolor={"#130202"} id="how">

      <Typography ref={box1} fontWeight={700} fontSize={{ xs: 24, md: 32 }} lineHeight={"140%"} color={"primary.white"} textAlign={"center"} mb={20} > How it <span style={{color : "#EC1C24"}} >works</span> </Typography>

      <Stack spacing={60} >
        {/* Num 1 */}
        <Stack justifyContent={"space-between"} spacing={20} direction={{xs : "column" , md : "row"}} alignItems={"center"}>
          {/* Text */}
          <Stack direction={"row"} spacing={8} alignItems={"center"} maxWidth={760}>
            <Typography data-aos="fade-right" fontSize={128} fontWeight={700} color={"transparent"} sx={{WebkitTextStrokeWidth : "3px" , WebkitTextStrokeColor : "rgba(236, 28, 36, 0.24)"}} > 1 </Typography>
            <Stack spacing={12}>
              <Typography data-aos="fade-up" data-aos-delay="200" color={"primary.white"} fontSize={{xs : 18 , sm : 32}} fontWeight={700}>Get on board</Typography>
              <Typography data-aos="fade-up" data-aos-delay="400" color={"text.secondary"} fontSize={{xs : 16 , sm : 18}} >contact us to know your vision and discuss goals and pricing.</Typography>
            </Stack>
          </Stack>
          {/* Logo */}
          <Stack>
            <svg width="321" height="256" viewBox="0 0 321 256" fill="none" xmlns="http://www.w3.org/2000/svg" ref={svgRef1}>
              <path d="M190.592 241.793L134.735 184.165L162.664 158.215C162.664 158.215 162.664 158.215 162.327 157.878C160.308 155.856 158.626 154.171 156.607 152.149L106.134 198.993C102.432 202.363 96.7121 202.363 93.3472 198.993L14.9455 127.21H137.091C135.408 124.514 133.726 121.481 132.043 118.785H4.1779C1.82248 118.785 0.140045 120.807 0.140045 122.829V251.904C0.140045 254.263 2.15897 255.948 4.1779 255.948H194.63C196.985 255.948 198.668 253.926 198.668 251.904V186.861C195.976 185.176 192.948 183.491 190.256 181.469V241.793H190.592ZM8.55224 132.602L64.4092 184.165L8.55224 241.793V132.602ZM14.2725 247.86L70.8025 189.894L87.6269 205.396C90.9918 208.429 95.3661 210.114 99.7405 210.114C104.115 210.114 108.489 208.429 111.854 205.396L128.678 189.894L185.208 247.86H14.2725Z" stroke="#C9C9C9"/>
              <path d="M218.521 66.5482C218.184 68.9073 219.53 70.9293 221.886 71.2663C228.615 72.2773 234.672 75.6475 239.383 80.3656C244.094 85.0837 247.459 91.1499 248.468 97.8901C248.805 99.9122 250.487 101.26 252.506 101.26C252.842 101.26 252.842 101.26 253.179 101.26C255.534 100.923 256.88 98.5642 256.544 96.5421C255.198 88.1168 251.16 80.3656 245.103 74.2994C239.046 68.2332 231.307 64.1891 222.895 62.8411C221.213 62.8411 218.857 64.5261 218.521 66.5482Z" stroke="#EC1C24"/>
              <path d="M280.098 97.8903C280.434 99.9123 282.117 101.597 284.136 101.597H284.472C286.828 101.26 288.51 99.2383 288.174 96.8793C286.491 80.0287 279.089 64.1892 267.311 52.3939C255.534 40.5985 239.719 33.1843 222.895 31.4992C220.54 31.1622 218.521 32.8473 218.184 35.2064C217.848 37.5654 219.53 39.5875 221.886 39.9245C236.691 41.2725 250.824 47.6757 261.255 58.4601C272.022 68.9074 278.752 83.0618 280.098 97.8903Z" stroke="#EC1C24"/>
              <path d="M289.856 30.4881C272.022 12.6265 248.132 1.84218 223.232 0.494141C220.876 0.494141 218.857 2.17919 218.857 4.53826C218.857 6.89734 220.54 8.9194 222.895 8.9194C246.113 10.2674 267.984 20.0407 284.136 36.5542C300.624 53.0678 310.382 74.9734 311.728 97.8901C311.728 100.249 313.747 101.934 315.766 101.934H316.102C318.458 101.934 320.14 99.9122 320.14 97.5531C318.121 71.9404 307.69 48.3496 289.856 30.4881Z" stroke="#EC1C24"/>
              <path d="M285.818 140.354L253.515 123.503C245.776 119.459 236.355 121.481 231.307 128.558L223.232 139.005C215.492 134.287 208.09 129.232 199.677 120.807C190.929 112.045 185.881 104.967 181.171 96.8792L191.265 88.7909C197.995 83.3988 200.014 73.9625 196.313 66.5483L179.825 34.1952C177.469 29.8141 173.431 26.444 168.384 25.096C163.337 23.7479 158.289 24.759 153.915 27.455L133.389 41.2725C126.66 45.9906 122.622 53.7419 122.958 62.1671C123.295 67.8963 123.968 75.9845 125.65 82.0507C132.043 106.315 147.185 131.254 168.048 152.486C189.246 173.718 214.146 188.546 238.374 194.949C244.094 196.634 252.506 197.308 258.226 197.645C258.563 197.645 259.236 197.645 259.572 197.645C267.648 197.645 274.714 193.601 279.089 186.861L292.548 165.966C295.24 161.585 296.249 156.53 294.903 151.812C293.558 146.757 290.529 142.713 285.818 140.354ZM285.818 161.248L272.359 182.143C269.667 186.524 264.956 188.883 259.909 188.883C259.572 188.883 259.236 188.883 258.899 188.883C253.515 188.546 245.776 187.872 240.729 186.524C217.848 180.458 194.294 166.303 174.441 146.083C154.588 126.199 140.119 102.271 134.062 79.6917C132.716 74.6365 132.043 66.8853 131.707 61.4931C131.37 56.1009 133.726 51.0458 138.437 48.0127L158.962 34.1952C160.645 33.1842 162.327 32.5102 164.346 32.5102C165.019 32.5102 166.029 32.5102 166.702 32.8472C169.393 33.5212 171.412 35.2063 172.758 37.5654L189.246 69.9184C191.265 73.9625 190.256 79.0176 186.554 81.7137L173.431 91.824C171.749 93.1721 171.412 95.1941 172.422 97.2162C177.806 106.989 183.526 115.752 193.957 126.199C204.052 136.309 212.8 142.039 222.559 147.431C224.241 148.442 226.596 148.105 227.942 146.42L238.374 133.276C241.065 129.569 246.113 128.558 250.151 130.58L282.453 147.431C284.809 148.779 286.491 150.801 287.164 153.497C287.501 156.193 287.164 159.226 285.818 161.248Z" stroke="#C9C9C9"/>
            </svg>
          </Stack>
        </Stack>
        {/* Num 2 */}
        <Stack justifyContent={"space-between"} spacing={20} direction={{xs : "column" , md : "row-reverse"}} alignItems={"center"}>
          {/* Text */}
          <Stack direction={"row"} spacing={8} alignItems={"center"} maxWidth={760}>
            <Typography data-aos="fade-right" fontSize={128} fontWeight={700} color={"transparent"} sx={{WebkitTextStrokeWidth : "3px" , WebkitTextStrokeColor : "rgba(236, 28, 36, 0.24)"}} > 2 </Typography>
            <Stack spacing={12}>
              <Typography data-aos="fade-up" data-aos-delay="200" color={"primary.white"} fontSize={{xs : 18 , sm : 32}} fontWeight={700}>Provide material/choose services </Typography>
              <Typography data-aos="fade-up" data-aos-delay="400" color={"text.secondary"} fontSize={{xs : 16 , sm : 18}} >Select from our diverse range of services to get started, or share your existing materials with us for enhancement or further development.</Typography>
            </Stack>
          </Stack>
          {/* Logo */}
          <Stack>
            <svg width="320" height="279" viewBox="0 0 320 279" fill="none" xmlns="http://www.w3.org/2000/svg" ref={svgRef2}>
              <path d="M277.592 227.608L316.242 208.283L211.027 169.513L249.797 274.729L269.122 236.078L309.681 276.637C310.874 277.83 312.365 278.367 313.916 278.367C315.467 278.367 316.958 277.771 318.151 276.637C320.477 274.311 320.477 270.554 318.151 268.227L277.592 227.608ZM231.187 189.614L286.24 209.894L263.038 221.465L251.467 244.667L231.187 189.614Z" stroke="#EC1C24"/>
              <path d="M134.922 80.3615C133.354 79.3559 131.382 79.3057 129.764 80.2106C128.146 81.0653 127.135 82.7245 127.135 84.5847V154.972C127.135 156.833 128.146 158.492 129.764 159.397C130.523 159.799 131.332 160 132.191 160C133.152 160 134.062 159.749 134.922 159.196L190.539 124.002C192.005 123.097 192.865 121.488 192.865 119.779C192.865 118.069 192.005 116.46 190.539 115.555L134.922 80.3615ZM137.247 145.822V93.7351L178.404 119.779L137.247 145.822Z" stroke="#C9C9C9"/>
              <path d="M314.483 0H259.31H60.6897H5.51724C2.48276 0 0 2.33513 0 5.18919V62.2703V119.351V176.432V233.514C0 236.368 2.48276 238.703 5.51724 238.703H60.6897H209.655C212.69 238.703 215.172 236.368 215.172 233.514C215.172 230.659 212.69 228.324 209.655 228.324H66.2069V176.432V119.351V62.2703V10.3784H253.793V62.2703V119.351C253.793 122.205 256.276 124.541 259.31 124.541H308.966V176.432C308.966 179.286 311.448 181.622 314.483 181.622C317.517 181.622 320 179.286 320 176.432V119.351V62.2703V5.18919C320 2.33513 317.517 0 314.483 0ZM11.0345 124.541H55.1724V171.243H11.0345V124.541ZM55.1724 114.162H11.0345V67.4595H55.1724V114.162ZM11.0345 228.324V181.622H55.1724V228.324H11.0345ZM55.1724 57.0811H11.0345V10.3784H55.1724V57.0811ZM308.966 10.3784V57.0811H264.828V10.3784H308.966ZM264.828 114.162V67.4595H308.966V114.162H264.828Z" stroke="#C9C9C9"/>
            </svg>
          </Stack>
        </Stack>
        {/* Num 3 */}
        <Stack justifyContent={"space-between"} spacing={20} direction={{xs : "column" , md : "row"}} alignItems={"center"}>
          {/* Text */}
          <Stack direction={"row"} spacing={8} alignItems={"center"} maxWidth={760}>
            <Typography data-aos="fade-right" fontSize={128} fontWeight={700} color={"transparent"} sx={{WebkitTextStrokeWidth : "3px" , WebkitTextStrokeColor : "rgba(236, 28, 36, 0.24)"}} > 3 </Typography>
            <Stack spacing={12}>
              <Typography data-aos="fade-up" data-aos-delay="200" color={"primary.white"} fontSize={{xs : 18 , sm : 32}} fontWeight={700}>Production finishes in under 48-72 hours</Typography>
              <Typography data-aos="fade-up" data-aos-delay="400" color={"text.secondary"} fontSize={{xs : 16 , sm : 18}} >Once you choose your service, production will start. A trello board is set up for each client to follow up with the work easily. On average, this process takes 48-72 hours, depending on the speed of feedback. </Typography>
            </Stack>
          </Stack>
          {/* Logo */}
          <Stack>
          <svg width="264" height="264" viewBox="0 0 264 264" fill="none" xmlns="http://www.w3.org/2000/svg" ref={svgRef3}>
            <path d="M132 14.5477C196.869 14.5477 249.451 67.1296 249.451 131.999C249.451 196.869 196.869 249.451 132 249.451C67.1302 249.451 14.536 196.869 14.536 131.999C14.536 67.1296 67.1302 14.5477 132 14.5477ZM132 0H131.988C59.0938 0 0 59.0938 0 132C0 204.894 59.0938 264 132 264C204.894 264 264 204.894 264 132C264 59.0938 204.894 0 132 0Z" stroke="#C9C9C9"/>
            <path d="M134.036 36.884V36.8961H134.024C130.005 36.8961 126.756 40.1449 126.756 44.1639L126.744 127.346C125.998 127.924 125.324 128.598 124.734 129.344H65.7145C61.7075 129.344 58.4467 132.605 58.4467 136.623C58.4467 140.642 61.7075 143.891 65.7145 143.891H124.734C126.888 146.647 130.257 148.428 134.036 148.428C140.545 148.428 145.828 143.146 145.828 136.624V136.612C145.828 132.845 144.071 129.5 141.315 127.335L141.303 44.1646C141.303 40.1456 138.043 36.884 134.036 36.884Z" stroke="#EC1C24"/>
          </svg>

          </Stack>
        </Stack>
        {/* Num 4 */}
        <Stack justifyContent={"space-between"} spacing={20} direction={{xs : "column" , md : "row-reverse"}} alignItems={"center"}>
          {/* Text */}
          <Stack direction={"row"} spacing={8} alignItems={"center"} maxWidth={760}>
            <Typography data-aos="fade-right" fontSize={128} fontWeight={700} color={"#130202"} sx={{WebkitTextStrokeWidth : "3px" , WebkitTextStrokeColor : "rgba(236, 28, 36, 0.24)"}} > 4 </Typography>
            <Stack spacing={12}>
              <Typography data-aos="fade-up" data-aos-delay="200" color={"primary.white"} fontSize={{xs : 18 , sm : 32}} fontWeight={700}>We Provide analytics and strategies </Typography>
              <Typography data-aos="fade-up" data-aos-delay="400" color={"text.secondary"} fontSize={{xs : 16 , sm : 18}} >Based on your niche and performance, we develop strategies to enhance service quality and provide analysis to improve operational efficiency.</Typography>
            </Stack>
          </Stack>
          {/* Logo */}
          <Stack>
            <svg width="264" height="264" viewBox="0 0 264 264" fill="none" xmlns="http://www.w3.org/2000/svg" ref={svgRef4}>
              <g clipPath="url(#clip0_169_7493)">
              <path d="M101.235 202.444C115.808 202.446 130.209 199.294 143.449 193.204L147.849 197.639C150.197 199.86 153.263 201.167 156.492 201.323C159.72 201.479 162.898 200.473 165.449 198.488L213.998 254.214C216.564 257.158 219.706 259.544 223.229 261.227C226.752 262.91 230.583 263.854 234.485 264C234.824 264 235.158 264 235.492 264C241.297 264 246.964 262.228 251.734 258.921C256.505 255.614 260.152 250.929 262.187 245.492C264.223 240.056 264.55 234.128 263.126 228.501C261.701 222.873 258.592 217.815 254.214 214.003L198.493 165.484C200.57 162.964 201.632 159.76 201.469 156.498C201.306 153.237 199.931 150.153 197.613 147.853L193.186 143.453C202.309 123.572 204.744 101.271 200.127 79.8895C195.511 58.5082 184.091 39.1983 167.578 24.8525C151.065 10.5067 130.349 1.89722 108.532 0.313889C86.7158 -1.26944 64.9734 4.25857 46.5624 16.0698C28.1513 27.8811 14.0628 45.3397 6.40733 65.8303C-1.24817 86.3209 -2.0585 108.74 4.09772 129.73C10.2539 150.72 23.0453 169.15 40.5556 182.26C58.0659 195.369 79.3524 202.453 101.226 202.448L101.235 202.444ZM255.006 234.806C255.138 237.494 254.716 240.18 253.765 242.698C252.814 245.216 251.356 247.511 249.48 249.44C247.549 251.319 245.258 252.787 242.745 253.757C240.232 254.727 237.549 255.179 234.857 255.086C232.165 254.993 229.52 254.356 227.08 253.214C224.64 252.072 222.456 250.449 220.66 248.442L171.82 192.355L192.372 171.802L248.459 220.642C250.457 222.433 252.068 224.613 253.194 227.049C254.32 229.484 254.936 232.124 255.006 234.806ZM35.8556 35.8556C51.3578 20.3287 71.8793 10.8248 93.7479 9.04464C115.616 7.26452 137.405 13.3244 155.214 26.1398C173.023 38.9552 185.691 57.6897 190.951 78.991C196.21 100.292 193.718 122.77 183.92 142.402C183.507 143.23 183.365 144.167 183.515 145.08C183.665 145.993 184.099 146.836 184.756 147.488L191.4 154.088C192.224 154.913 192.686 156.031 192.686 157.197C192.686 158.362 192.224 159.48 191.4 160.305L160.301 191.4C159.462 192.194 158.35 192.637 157.194 192.637C156.039 192.637 154.927 192.194 154.088 191.4L147.488 184.756C146.836 184.099 145.993 183.665 145.08 183.515C144.167 183.365 143.23 183.507 142.402 183.92C122.77 193.718 100.292 196.21 78.9909 190.951C57.6897 185.691 38.9551 173.023 26.1397 155.214C13.3244 137.405 7.26451 115.616 9.04463 93.7479C10.8247 71.8793 20.3286 51.3578 35.8556 35.8556Z" stroke="#C9C9C9"/>
              <path d="M98.0892 80.4892L83.6 94.9784L69.1108 80.4892C68.2857 79.6643 67.1667 79.2009 66 79.2009C64.8333 79.2009 63.7143 79.6643 62.8892 80.4892L45.2892 98.0892C44.4877 98.919 44.0442 100.03 44.0542 101.184C44.0643 102.338 44.527 103.441 45.3428 104.257C46.1586 105.073 47.2622 105.536 48.4158 105.546C49.5695 105.556 50.681 105.112 51.5108 104.311L66 89.8216L80.4892 104.311C81.3143 105.136 82.4333 105.599 83.6 105.599C84.7667 105.599 85.8857 105.136 86.7108 104.311L101.2 89.8216L115.689 104.311C116.514 105.136 117.633 105.6 118.8 105.6C118.947 105.609 119.093 105.609 119.24 105.6C119.887 105.536 120.512 105.329 121.07 104.994C121.628 104.659 122.104 104.205 122.465 103.664L148.865 64.064C149.186 63.5832 149.409 63.044 149.521 62.4772C149.633 61.9103 149.633 61.3269 149.52 60.7602C149.407 60.1935 149.183 59.6546 148.861 59.1744C148.54 58.6941 148.127 58.2819 147.646 57.9612C147.166 57.6405 146.626 57.4176 146.06 57.3053C145.493 57.193 144.909 57.1935 144.343 57.3067C143.776 57.4198 143.237 57.6435 142.757 57.9649C142.277 58.2864 141.864 58.6992 141.544 59.18L118.118 94.292L104.311 80.4892C103.486 79.6643 102.367 79.2009 101.2 79.2009C100.033 79.2009 98.9143 79.6643 98.0892 80.4892Z" stroke="#EC1C24"/>
              <path d="M101.2 184.8C121.767 184.819 141.62 177.256 156.961 163.557C172.302 149.858 182.055 130.984 184.354 110.546C186.653 90.1078 181.338 69.5391 169.424 52.7739C157.51 36.0087 139.834 24.2236 119.777 19.6725C119.211 19.538 118.625 19.517 118.051 19.6106C117.477 19.7041 116.928 19.9105 116.434 20.2177C115.94 20.5249 115.513 20.9269 115.175 21.4004C114.838 21.8738 114.598 22.4095 114.469 22.9763C114.34 23.5432 114.324 24.13 114.423 24.7028C114.522 25.2757 114.734 25.8232 115.046 26.3138C115.358 26.8044 115.764 27.2283 116.241 27.5611C116.717 27.8938 117.255 28.1288 117.823 28.2525C129.033 30.801 139.503 35.9005 148.421 43.1545C157.338 50.4085 164.462 59.6216 169.239 70.0773C174.017 80.5331 176.318 91.9498 175.964 103.44C175.61 114.93 172.611 126.183 167.2 136.325V101.2C167.2 98.8662 166.273 96.6279 164.623 94.9776C162.972 93.3272 160.734 92.4001 158.4 92.4001H149.6C147.266 92.4001 145.028 93.3272 143.377 94.9776C141.727 96.6279 140.8 98.8662 140.8 101.2V164.56C137.976 166.336 135.036 167.921 132 169.303V132C132 129.666 131.073 127.428 129.423 125.778C127.772 124.127 125.534 123.2 123.2 123.2H114.4C112.066 123.2 109.828 124.127 108.177 125.778C106.527 127.428 105.6 129.666 105.6 132V175.776C104.135 175.864 102.687 176 101.2 176C99.7128 176 98.2652 175.864 96.8 175.776V123.2C96.8 120.866 95.8729 118.628 94.2225 116.978C92.5722 115.327 90.3339 114.4 88 114.4H79.2C76.8661 114.4 74.6278 115.327 72.9775 116.978C71.3271 118.628 70.4 120.866 70.4 123.2V169.286C67.3643 167.909 64.4243 166.33 61.6 164.56V132C61.6 129.666 60.6729 127.428 59.0225 125.778C57.3722 124.127 55.1339 123.2 52.8 123.2H44C41.6661 123.2 39.4278 124.127 37.7775 125.778C36.1271 127.428 35.2 129.666 35.2 132V136.325C29.1205 124.933 26.0965 112.16 26.4227 99.2507C26.7488 86.3417 30.4141 73.7375 37.0611 62.6666C43.7082 51.5958 53.1102 42.436 64.3508 36.0801C75.5914 29.7243 88.2869 26.3892 101.2 26.4001C102.367 26.4001 103.486 25.9365 104.311 25.1114C105.136 24.2862 105.6 23.167 105.6 22.0001C105.6 20.8331 105.136 19.714 104.311 18.8888C103.486 18.0637 102.367 17.6001 101.2 17.6001C79.0279 17.6001 57.7639 26.4079 42.0859 42.086C26.4078 57.764 17.6 79.028 17.6 101.2C17.6 123.372 26.4078 144.636 42.0859 160.314C57.7639 175.992 79.0279 184.8 101.2 184.8ZM149.6 101.2H158.4V149.301C155.716 152.482 152.773 155.434 149.6 158.127V101.2ZM114.4 132H123.2V172.687C120.312 173.558 117.373 174.251 114.4 174.764V132ZM79.2 123.2H88V174.764C85.0271 174.251 82.0883 173.558 79.2 172.687V123.2ZM44 132H52.8V158.127C49.6272 155.434 46.6837 152.482 44 149.301V132Z" stroke="#C9C9C9"/>
              </g>
              <defs>
              <clipPath id="clip0_169_7493">
              <rect width="264" height="264" fill="white"/>
              </clipPath>
              </defs>
            </svg>
          </Stack>
        </Stack>
      </Stack>
      
    </Stack>
  )
}

export default How
